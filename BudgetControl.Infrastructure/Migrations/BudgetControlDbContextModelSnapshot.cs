// <auto-generated />
using System;
using BudgetControl.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetControl.Infrastructure.Migrations
{
    [DbContext(typeof(BudgetControlDbContext))]
    partial class BudgetControlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BudgetControl.Domain.ConfigAggregate.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ConfigId");

                    b.Property<Guid>("LedgerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LedgerId");

                    b.HasKey("Id");

                    b.ToTable("Configs", (string)null);
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Entities.CategoryGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryGroupId");

                    b.Property<Guid>("LedgerCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LedgerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Goal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id", "LedgerCategoryId", "LedgerId");

                    b.HasIndex("Name");

                    b.HasIndex("LedgerCategoryId", "LedgerId");

                    b.ToTable("CategoryGroups", (string)null);
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Entities.LedgerCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LedgerCategoryId");

                    b.Property<Guid>("LedgerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<decimal>("Goal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id", "LedgerId");

                    b.HasIndex("LedgerId");

                    b.HasIndex("Name");

                    b.ToTable("LedgerCategories", (string)null);
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Ledgers", (string)null);
                });

            modelBuilder.Entity("BudgetControl.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid?>("ConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId")
                        .IsUnique()
                        .HasFilter("[ConfigId] IS NOT NULL");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Entities.CategoryGroup", b =>
                {
                    b.HasOne("BudgetControl.Domain.LedgerAggregate.Entities.LedgerCategory", null)
                        .WithMany("Groups")
                        .HasForeignKey("LedgerCategoryId", "LedgerId");
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Entities.LedgerCategory", b =>
                {
                    b.HasOne("BudgetControl.Domain.LedgerAggregate.Ledger", null)
                        .WithMany("Categories")
                        .HasForeignKey("LedgerId");
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Ledger", b =>
                {
                    b.HasOne("BudgetControl.Domain.UserAggregate.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetControl.Domain.UserAggregate.User", b =>
                {
                    b.HasOne("BudgetControl.Domain.ConfigAggregate.Config", null)
                        .WithOne()
                        .HasForeignKey("BudgetControl.Domain.UserAggregate.User", "ConfigId");
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Entities.LedgerCategory", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("BudgetControl.Domain.LedgerAggregate.Ledger", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
